<?xml version="1.0" encoding="UTF-8"?>
<web-app version="2.4" xmlns="http://java.sun.com/xml/ns/j2ee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd">
  <!--以下配置的加载顺序:先 ServletContext >> context-param >> listener >> filter >> servlet >>  spring-->
  <context-param><!--全局范围内环境参数初始化-->
    <param-name>contextConfigLocation</param-name> <!--参数名称-->
    <param-value>classpath:spring.xml</param-value> <!--参数取值-->
  </context-param>
  <!--***************监听器配置***********-->
  <!--例:spring监听器-->
  <listener>
    <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
  </listener>
  <!-- 防止Spring内存溢出监听器  -->
  <listener>
    <listener-class>org.springframework.web.util.IntrospectorCleanupListener</listener-class>
  </listener>

  <listener>
    <listener-class>org.springframework.web.context.request.RequestContextListener</listener-class>
  </listener>
  <!--***************过滤器配置***********-->
  <!--例:编码过滤器-->
  <filter>
    <filter-name>encodingFilter</filter-name>
    <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
    <init-param><!--用来定义参数,若在Servlet可以使用下列方法来获得:String param_name=getServletContext().getInitParamter("param-name里面的值");-->
      <param-name>encoding</param-name>
      <param-value>UTF-8</param-value>
    </init-param>
    <init-param>
      <param-name>forceEncoding</param-name>
      <param-value>true</param-value>
    </init-param>
  </filter>

  <filter-mapping><!--用来定义filter所对应的URL-->
    <filter-name>encodingFilter</filter-name><!--指定对应filter的名字-->
    <url-pattern>/*</url-pattern>  <!--指定filter所对应的URL-->
  </filter-mapping>

  <!--<filter>
    <filter-name>requestFilter</filter-name>
    <filter-class>com.zqs.scg.common.requestutil.HttpServletRequestReplacedFilter</filter-class>
  </filter>
  <filter-mapping>
    <filter-name>requestFilter</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>-->

  <!--***************servlet配置***********-->
  <servlet>
    <servlet-name>springmvc</servlet-name>
    <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class><!--指定servlet的类名称,这里配置了前端控制器-->
    <init-param>
      <description>spring mvc 配置文件</description>
      <param-name>contextConfigLocation</param-name>
      <param-value>classpath*:/spring-mvc.xml</param-value>
    </init-param>
    <load-on-startup>1</load-on-startup><!--当值为正数或零时：Servlet容器先加载数值小的servlet，再依次加载其他数值大的servlet.-->
  </servlet>
  <servlet-mapping>
    <servlet-name>springmvc</servlet-name>
    <url-pattern>/</url-pattern> <!--指定servlet所对应的URL-->
  </servlet-mapping>


  <!--会话超时配置（单位为分钟）-->
  <session-config><!--如果某个会话在一定时间未被访问，则服务器可以扔掉以节约内存-->
    <session-timeout>120</session-timeout>
  </session-config>
  <!--MIME类型配置  -->
  <mime-mapping><!--设定某种扩展名的文件用一种应用程序来打开的方式类型，当该扩展名文件被访问的时候，浏览器会自动使用指定应用程序来打开-->
    <extension>*.ppt</extension>            <!--扩展名名称-->
    <mime-type>application/mspowerpoint</mime-type>         <!--MIME格式-->
  </mime-mapping>
  <!--欢迎页面配置-->
  <welcome-file-list><!--定义首页列单.-->
    <welcome-file>/index.jsp</welcome-file> <!--用来指定首页文件名称.我们可以用<welcome-file>指定几个首页,而服务器会依照设定的顺序来找首页.-->
    <welcome-file>/index.html</welcome-file>
  </welcome-file-list>
  <!--&lt;!&ndash;配置错误页面&ndash;&gt;
  <error-page>  &lt;!&ndash;将错误代码(Error Code)或异常(Exception)的种类对应到web应用资源路径.&ndash;&gt;
    <error-code>404</error-code>        &lt;!&ndash;HTTP Error code,例如: 404、403&ndash;&gt;
    <location>error.html</location>         &lt;!&ndash;用来设置发生错误或异常时要显示的页面&ndash;&gt;
  </error-page>
  <error-page>
    <exception-type>java.lang.Exception</exception-type>&lt;!&ndash;设置可能会发生的java异常类型,例如:java.lang.Exception&ndash;&gt;
    <location>ExceptionError.html</location>            &lt;!&ndash;用来设置发生错误或异常时要显示的页面&ndash;&gt;
  </error-page>-->

</web-app>